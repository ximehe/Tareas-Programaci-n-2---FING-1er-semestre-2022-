1>#  implementar insertarAlInicio, imprimirCadena.
2>
3>Se insertó (5,5.00) al inicio de la cadena.
4>(5,5.00)
5>La cantidad es 1.
6>1 no está en la cadena.
7>5 está en la cadena.
8>Se insertó (1,1.00) al inicio de la cadena.
9>(1,1.00)(5,5.00)
10>La cantidad es 2.
11>1 está en la cadena.
12>Se insertó (0,0.00) al inicio de la cadena.
13>Se insertó (2,2.00) al inicio de la cadena.
14>Se insertó (8,8.00) al inicio de la cadena.
15>Se insertó (3,3.00) al inicio de la cadena.
16>Se insertó (7,7.00) al inicio de la cadena.
17>Se insertó (4,4.00) al inicio de la cadena.
18>Se insertó (6,6.00) al inicio de la cadena.
19>Se insertó (1,1.00) al inicio de la cadena.
20>(1,1.00)(6,6.00)(4,4.00)(7,7.00)(3,3.00)(8,8.00)(2,2.00)(0,0.00)(1,1.00)(5,5.00)
21>La cantidad es 10.
22>1 está en la cadena.
23>5 está en la cadena.
24>0 está en la cadena.
25>6 está en la cadena.
26>9 no está en la cadena.
27>Fin.
==435== 80 bytes in 1 blocks are definitely lost in loss record 1 of 4
==435==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==435==    by 0x10A271: crearColCadenas() (colCadenas.cpp:13)
==435==    by 0x109317: main (principal.cpp:51)
==435== 
==435== 400 (24 direct, 376 indirect) bytes in 1 blocks are definitely lost in loss record 4 of 4
==435==    at 0x483BE63: operator new(unsigned long) (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==435==    by 0x109FA3: insertarAlInicio(unsigned int, double, _rep_cadena*) (cadena.cpp:118)
==435==    by 0x109846: main (principal.cpp:141)
==435== 
